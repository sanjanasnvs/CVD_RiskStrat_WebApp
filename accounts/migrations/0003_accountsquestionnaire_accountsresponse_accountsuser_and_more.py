# Generated by Django 5.1.7 on 2025-03-28 14:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("accounts", "0002_questionnaire_response"),
    ]

    operations = [
        migrations.CreateModel(
            name="AccountsQuestionnaire",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
            ],
            options={
                "db_table": "accounts_questionnaire",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AccountsResponse",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("answer_data", models.JSONField()),
                ("submitted_at", models.DateTimeField()),
            ],
            options={
                "db_table": "accounts_response",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AccountsUser",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.IntegerField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.IntegerField()),
                ("is_active", models.IntegerField()),
                ("date_joined", models.DateTimeField()),
                ("role", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "accounts_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AccountsUserGroups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "accounts_user_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AccountsUserUserPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "accounts_user_user_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Admins",
            fields=[
                ("admin_id", models.AutoField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("email", models.CharField(max_length=100, unique=True)),
                ("password_hash", models.CharField(max_length=255)),
                ("role", models.CharField(blank=True, max_length=10, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "Admins",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("codename", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Clinicians",
            fields=[
                ("clinician_id", models.AutoField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("email", models.CharField(max_length=100, unique=True)),
                ("password_hash", models.CharField(max_length=255)),
                ("specialty", models.CharField(blank=True, max_length=100, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "Clinicians",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.PositiveSmallIntegerField()),
                ("change_message", models.TextField()),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MlModels",
            fields=[
                ("model_id", models.AutoField(primary_key=True, serialize=False)),
                ("method", models.CharField(max_length=100)),
                ("title", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "ML_Models",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PatientOutcomes",
            fields=[
                ("outcome_id", models.AutoField(primary_key=True, serialize=False)),
                ("outcome_description", models.TextField()),
                ("reported_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "Patient_Outcomes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Patients",
            fields=[
                ("patient_id", models.AutoField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("email", models.CharField(max_length=100, unique=True)),
                ("password_hash", models.CharField(max_length=255)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("gender", models.CharField(blank=True, max_length=6, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "Patients",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Responses",
            fields=[
                ("response_id", models.AutoField(primary_key=True, serialize=False)),
                ("response_text", models.TextField()),
                ("response_date", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "Responses",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RiskStratification",
            fields=[
                (
                    "stratification_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "risk_score",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("recommendation", models.TextField(blank=True, null=True)),
                ("assessed_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "Risk_Stratification",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Users",
            fields=[
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                ("email", models.CharField(max_length=255, unique=True)),
                ("password_hash", models.CharField(max_length=255)),
                ("role", models.CharField(max_length=9)),
            ],
            options={
                "db_table": "Users",
                "managed": False,
            },
        ),
        migrations.AlterModelOptions(
            name="questionnaire",
            options={"managed": False},
        ),
        migrations.CreateModel(
            name="ClinicianPatient",
            fields=[
                (
                    "clinician",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="accounts.clinicians",
                    ),
                ),
                ("assigned_date", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "Clinician_Patient",
                "managed": False,
            },
        ),
        migrations.DeleteModel(
            name="Response",
        ),
    ]
